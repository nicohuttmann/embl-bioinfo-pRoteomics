[{"path":"index.html","id":"preface","chapter":"Preface","heading":"Preface","text":"Hi friends, welcome Introduction Data Analysis Visualization R. document contains explanations material group project produced RStudio using R Markdown document ‘knitted’ html file. ’ll maybe get later.1This book live Github repository updated course. end, can download final project alongside additional material like PowerPoint presentation guide us sections, code, raw data maybe stuff. Everything see course available afterwards.","code":""},{"path":"index.html","id":"group-work-structure","chapter":"Preface","heading":"Group work structure","text":"can go project individually groups. case, recommend putting code R script matter . step, problem facing described alongside final goal. , can either figure code entirely , use hint, copy complete code snippet document run . latter option comes close many problems coding solved - define problem, google , find answer StackOverflow copy script. Yay, ’re becoming data scientist!first chapters document R Basics (left) provide short introduction coding R. Parts reference book R Data Science (2e). great resource everyone beginner expert. recommend matter , relatively new R course, go days use opportunity discuss concepts book group setting. first 2.5 h session Tuesday suffice get everyone page ready start exploring real data Group Work Project.game plan now :Tuesday\n12:30 - 15:00 R Basics\n15:30 - 17:00 Getting started projectWednesday\n16:30 - 17:30 Pick project see everything still works2Thursdays\n9:00 - 12:00 Finish data analysis\n13:00 - 16:00 Try data visualizations reportingFriday\n9:00 - 11:30 Prepare presentation breakfast","code":""},{"path":"index.html","id":"motivation","chapter":"Preface","heading":"Motivation","text":"Breakfast Friday, isn’t motivation enough? Well, . ’re spend 13.5 h project together precious research waiting us.one’s required use R project, believe already plenty motivation. course give opportunity see actual R code3, just random examples. may even use code remotely interested anything regarding protein-protein, protein-nucleic acid, protein-metabolite, protein-drug interactions proteome-wide scale.one’s need R projects yet, see fast automation excel tasks. GraphPad Prism. maybe want make simple website. wanna put CV.4","code":""},{"path":"r-and-rstudio.html","id":"r-and-rstudio","chapter":"1 R and RStudio","heading":"1 R and RStudio","text":"“R ‘GNU S’, freely available language environment statistical computing graphics provides wide variety statistical graphical techniques: linear nonlinear modelling, statistical tests, time series analysis, classification, clustering, etc.”description R R website.","code":""},{"path":"r-and-rstudio.html","id":"install-the-r-language","chapter":"1 R and RStudio","heading":"1.1 Install the R language","text":"Download recent release R platform https://cloud.r-project.org/. Install like program. important install R RStudio.","code":""},{"path":"r-and-rstudio.html","id":"install-rstudio","chapter":"1 R and RStudio","heading":"1.2 Install RStudio","text":"RStudio integrated development environment (IDE) R. IDEs exist, RStudio software choice far. Like, far. Download desktop version RStudio https://www.rstudio.com/products/rstudio/. program interact R language conduct analyses.","code":""},{"path":"how-does-r-work.html","id":"how-does-r-work","chapter":"2 How does R work?","heading":"2 How does R work?","text":"“understand computations R, two slogans helpful:\nEverything exists object.\nEverything happens function call.” — John Chambers5Ok, cool. now? Well, statement tells us everything R code falls two categories, either object function (likely take object input give back modified object return).","code":""},{"path":"how-does-r-work.html","id":"objects","chapter":"2 How does R work?","heading":"2.1 Objects","text":"Please look workflow basics first introduction recapitulation6 coding R.\nimportant takeaway can assign (create) object R assignment operator <-. , c ombine function c()7 one frequently used functions R.c(1, 2, 3) -> numbers works well, please ever .8\ncreated called vector, precisely atomic vector. means elements type. can read Vectors chapter Advanced R waiting time unsure behavior vectors. Examples :unhappy type data changed previous example, simply change c() list().9\ndata types can found Vectors chapter mentioned previously covered project eventually.","code":"\n# Assign the vector to an object called numbers\nnumbers <- c(1, 2, 3)\n# Execute the following line to print it to the console\nnumbers\n# Some objects (not this one) need to be forced to show in the console \nprint(numbers)\nmixed_numbers <- c(0, 1, 2, \"three\")\nmixed_numbers_2 <- c(F, TRUE, 2, 3)\n# You don't actually need to assign them\nc(F, TRUE, 2, \"three\")\nlist(0, 1, 2, \"three\")\nlist(F, TRUE, 2, 3)\nlist(\"these\" = F, \"are\" = TRUE, \"names\" = 2, \"three\")\nlist(\"and\" = F, \"they\" = TRUE, \"work\" = 2, \"notemptyanymore\" = \"for both lists and vectors :)\")"},{"path":"how-does-r-work.html","id":"functions","chapter":"2 How does R work?","heading":"2.2 Functions","text":"Besides basic object R, vector, also covered two functions well. c() list() functions allow us create atomic vector list objects. want understand function, simply write ?c10 R prompt documentation function Help pane bottom right.11The number functions exceeds number object types far, therefore see use functions properly. function 1. name, 2. object 3. can evoked () brakets following name. Let’s try :Nice! bad example. Write function name sum wait list options appear. happen, can press Tab. see list, scroll arrow buttons choose function Tab Enter. cursor brackets function, press Tab . Now, see arguments function. Arguments different inputs function declare precisely input goes within function. bad example special type argument ..., (dot-dot-dot), accepts undefined number arguments, case multiple numbers.better example intersect() function, takes two sets form atomic vectors x y returns intersection.Set Operation functions useful one point sure. Another resource worth mentioning R-bloggers website.formal description functions, can read function fundamentals. now let’s see functions come .","code":"\nsum(1, 2, 3)\nintersect(x = c(1, 2, 3), \n          y = c(2, 3, 4))"},{"path":"r-packages.html","id":"r-packages","chapter":"3 R packages","heading":"3 R packages","text":"“R packages collections functions data sets developed community. increase power R improving existing base R functionalities, adding new ones.”12Basically, R packages nothing collections functions bundled together way makes sense. Like different cookbooks contain recipes particular kind food. can installed many different sources explored .","code":""},{"path":"r-packages.html","id":"from-cran","chapter":"3 R packages","heading":"3.1 From CRAN","text":"Comprehensive R Archive Network (CRAN) package repository features 18,000+ R packages. ’s list Available CRAN Packages Name. general purpose packages can found , however due reasons, packages available sources.first example, download tidyverse, collection R packages data science.“tidyverse opinionated collection R packages designed data science. packages share underlying design philosophy, grammar, data structures.”can install packages CRAN install.packages() function like :Note, can also download one package using vector (c()) containing package names:BiocManager well devtools used following download R packages sources.","code":"\ninstall.packages(\"tidyverse\")\ninstall.packages(c(\"BiocManager\", \"devtools\"))"},{"path":"r-packages.html","id":"from-bioconductor","chapter":"3 R packages","heading":"3.2 From Bioconductor","text":"Bioconductor collection R packages bioinformatics purposes. first packages need Bioconductor downloaded install() function BiocManager package:","code":"\nBiocManager::install(c(\"fgsea\",\n                       \"org.Hs.eg.db\",\n                       \"UniProt.ws\"))"},{"path":"r-packages.html","id":"from-github-and-others-sources","chapter":"3 R packages","heading":"3.3 From GitHub and others sources","text":"Another important source R packages GitHub. GitHub just place R packages developed put repositories CRAN Bioconductor, many packages including PELSA package can installed well.example install_github() function devtools package. package required yet.","code":"\ndevtools::install_github(\"nicohuttmann/PELSA\")"},{"path":"the-tidyverse.html","id":"the-tidyverse","chapter":"4 The tidyverse","heading":"4 The tidyverse","text":"may already installed tidyverse previous chapter. collection many R packages made data science. see high level dialect - allows base R“tidyverse opinionated collection R packages designed data science. packages share underlying design philosophy, grammar, data structures.”tidyverse extensively described R Data Science (2e) book13 recommended Learn tidyverse individual packages summarized Posit cheatsheets.","code":""},{"path":"coding-style.html","id":"coding-style","chapter":"5 Coding style","heading":"5 Coding style","text":"Okay, nearly made project. One last chapter. promise.One decision may already guessed, follower tidyverse try use instead base R solutions wherever possible.14 Still, almighty sometimes need solutions. example dividing two data frames require tidyverse functions pivot_longer, inner_join, mutate pivot_wider. elegant base R solution data matrices simply using mathematical operator /.Damn, writing example, found trying show work, somehow work. let explain don’t like example.structure object R can found using class() function. Just try .objects base R example matrices. Let’s check tidyverse example.output divide operation tibble (“tbl_df”) object anymore, data.frame. big problem now, can solved quite easily tibble::as_tibble() function:better avoided.real tidyverse solution work following.seems like tideous example comparison, also bears ’s advantages see later.Btw, ’ve done code-condensed form.need understand immediately, common operations omics data science. understand tidyr::pivot functions within week, ’re years ahead compared journey data science :)","code":"\nm1 <-  matrix(1:9, nrow = 3)\n\nm2 <-  matrix(1:9, nrow = 3) * 2\n\nm2 / m1\nt1 <- tibble(a = 1:3, b = 4:6, c = 7:9)\n\nt2 <- tibble(a = 1:3, b = 4:6, c = 7:9) %>% \n  mutate(across(everything(), \\(x) x * 2))\n\nt2 / t1\nclass(m1)\n\nclass(m2)\n\nclass(m2 / m1)\nclass(t1)\n\nclass(t2)\n\nclass(t2 / t1)\ntibble::as_tibble(t2 / t1)\n# First we add a row column to the tibbles, this brings them closer to real data \nt1_r <- t1 %>% \n  mutate(row = c(\"1\", \"2\", \"3\"), \n         .before = 1)\n# Do it again \nt2_r <- t2 %>% \n  mutate(row = c(\"1\", \"2\", \"3\"), \n         .before = 1)\n# Now we bring our data from a wide format into a long format \nt1_long <- pivot_longer(t1_r, \n                        cols = c(\"a\", \"b\", \"c\"), \n                        names_to = \"column\", \n                        values_to = \"number\")\n# And again \nt2_long <- pivot_longer(t2_r, \n                        cols = -1, \n                        names_to = \"column\", \n                        values_to = \"number\")\n\n# We start with combining the data frames by matching both tibbles by the columns \"row\" and \"column\" and choosing a suffing for overlapping column names\nfull_join(t1_long, t2_long, by = c(\"row\", \n                                   \"column\"), \n          suffix = c(\"_1\", \"_2\")) %>% \n  # Then we can divide the values of t2 by t1 and save them in a new column \n  mutate(number = number_2 / number_1) %>% \n  # Now we finally pivot back to the wide data format from the beginning\n  pivot_wider(id_cols = \"row\", \n              names_from = \"column\", \n              values_from = \"number\")\n# First we put the tibbles in a list \nlist(\"t1\" = t1, \"t2\" = t2) %>% \n  # map allows us to do the same computation for all objects of the list as defined by the function \\(x) x...\n  map(\\(x) x %>% \n        mutate(row = c(\"1\", \"2\", \"3\"), \n               .before = 1) %>% \n        pivot_longer(cols = -1, \n                     names_to = \"column\", \n                     values_to = \"number\")) %>% \n  # Once both tibbles are ready to be combined, we can access them via the with function (we may talk about this again, I find it very helpful sometimes)\n  with(full_join(t1, t2, by = c(\"row\", \n                                \"column\"), \n                 suffix = c(\"_1\", \"_2\"))) %>% \n  # Now we continue as above\n  mutate(number = number_2 / number_1) %>% \n  # And back to a wide format tibble \n  pivot_wider(id_cols = \"row\", \n              names_from = \"column\", \n              values_from = \"number\")"},{"path":"coding-style.html","id":"coding-style-1","chapter":"5 Coding style","heading":"5.1 Coding style","text":"Well, ?! pipe. %>% . ?15We previously learned “Everything happens function call.” order result function ‘exist’, need assign object. Fine. Works. happens need multiple operations object get result?Let’s consider generic example vector contains letters like count represent barplot.first exercise book16. can simply copy code marking pressing helpful button top right corner code chunk paste R script. just run lines code look produce.done code, observe happened continue code .code yields barplot represents frequency letter. get result, created two intermediate objects random_letters_table random_letters_table_sorted. can random_letters object, simply overwriting line.saw examples different ways chain outputs different computations arrive barplot. Let’s try use %>% operator simplify process.chain begins object random_letters followed functions subsequent line. output preceding line always used first argument following function.equivalent nested construct:17I hope obvious %>% useful tool, just writing less code also making code legible. Btw, find hidden message barplot? , try stretch ‘Plots’ window press ‘Zoom’ ‘Plots’ panel.making exercise even better example utility %>% :)\nprobably better explanation pipes -depth explanation, please look corresponding chapter R Data Science chapter second edition, R Data Science (2e).Using %>% pipe operator one part Style guide big impact legibility code. visually prefer old version suggest reading one two. beginning coding career, recommendations immediately obvious, remember later .","code":"\nletters_freq <- c(\"A\" = 5, \"B\" = 18, \"C\" = 20, \"D\" = 2,\n                  \"E\" = 24, \"F\" = 13, \"G\" = 1, \"H\" = 25,\n                  \"I\" = 21, \"J\" = 11, \"K\" = 19, \"L\" = 6,\n                  \"M\" = 10, \"N\" = 14, \"O\" = 16, \"P\" = 9,\n                  \"Q\" = 23, \"R\" = 17, \"S\" = 8, \"T\" = 26,\n                  \"U\" = 22, \"V\" = 7, \"W\" = 15, \"X\" = 12,\n                  \"Y\" = 3, \"Z\" = 4)\n\nrandom_letters <- rep(names(letters_freq), letters_freq)\n# Count each element of random_letters \nrandom_letters_table <- table(random_letters)\n# Sort table in decending order \nrandom_letters_table_sorted <- sort(random_letters_table, decreasing = T)\n# Plot the frequency of each letter \nbarplot(random_letters_table_sorted)\n# Count each element of random_letters \nrandom_letters <- table(random_letters)\n# Sort table in descending order \nrandom_letters <- sort(random_letters, decreasing = T)\n# Plot the frequency of each letter \nbarplot(random_letters)\nrandom_letters %>%  \n  table() %>% \n  sort(decreasing = T) %>% \n  barplot()\nbarplot(sort(table(random_letters), decreasing = T))\nsentence_full <- \"The quick brown fox jumps over the lazy dog\"\n## Unrelated but, wow I just discovered there's a `sentences` object in R\n\n# Generate the frequency of each individual letter\nletters_freq <- sentence_full %>% \n  # Remove spaces\n  str_remove_all(\" \") %>% \n  # Split the string into individual letters \n  str_split(\"\") %>% \n  # Extract vector from list \n  unlist() %>% \n  # Make all letters upper case\n  toupper() %>% \n  # Remove dublicated letters \n  unique() %>% \n  # Make new vector with letter as name and decreasing numbers from 26 to 1 as content\n  # Do you see how the . marks the position of the argument coming from the previous line?\n  setNames(26:1, .) %>% \n  # Reorder the vector so that the solution is not immediately obvious to you guys \n  # Not this is some weird stuff here, do try this at home\n  `[`(., order(names(.)))\n\n# Test if it works\nrandom_letters <- rep(names(letters_freq), letters_freq)\n\n\n# Now prepare the example for the exercise\n\n# This function copies a vector to the console \n.cat_character_named <- function(...) {\n  \n  n <- paste0(names(...), '\" = \"', ..., '\"')\n  \n  cat(paste0('c(\"', paste(n, collapse = ',\\n\\t\"'), ')'))\n  \n}\n\n.cat_character_named(random_letters)\n\nletters_freq <- c(\"A\" = 5,\n                  \"B\" = 18,\n                  \"C\" = 20,\n                  \"D\" = 2,\n                  \"E\" = 24,\n                  \"F\" = 13,\n                  \"G\" = 1,\n                  \"H\" = 25,\n                  \"I\" = 21,\n                  \"J\" = 11,\n                  \"K\" = 19,\n                  \"L\" = 6,\n                  \"M\" = 10,\n                  \"N\" = 14,\n                  \"O\" = 16,\n                  \"P\" = 9,\n                  \"Q\" = 23,\n                  \"R\" = 17,\n                  \"S\" = 8,\n                  \"T\" = 26,\n                  \"U\" = 22,\n                  \"V\" = 7,\n                  \"W\" = 15,\n                  \"X\" = 12,\n                  \"Y\" = 3,\n                  \"Z\" = 4)"},{"path":"coding-style.html","id":"data-organization-wihtin-r","chapter":"5 Coding style","heading":"5.2 Data organization wihtin R","text":"moving basics actual project, let’s see work R. Working R means packages code use, working R means put code data. Let’s start top level. scripts data live?","code":""},{"path":"coding-style.html","id":"r-projects","chapter":"5 Coding style","heading":"5.2.1 R projects","text":"just work R project, also work one. Please look description R projects now well known book. get closer group work project let’s start creating place data code.Create R project course. suggest make folder called R within Documents folder wherever store research. , start collect different R projects.\ncan create new R project clicking File -> New Project… -> New Directory -> New Project. Now enter name18, browse top folder like press Create Project. want keep current R session open, tick Open new session.\nmay seem convenient folder server lab, gets archived automatically, however, sometimes gives trouble slows analysis. Copying R folder time time seems like practical solution .\nGreat, created first R project. can identify project name window top right corner.creating first R script, can set folder structure within R project. can done operating system’s file explorer function dir.create. usually begin setting work directory like :like :)","code":"\n# All R and Rmd scripts will be in here \ndir.create(\"Scripts\")\n# All raw data can be stored here \ndir.create(\"Data\")\n# A separate folder for RData objects \ndir.create(\"Data/RData\")\n# All output like figures, tables etc. \ndir.create(\"Output\")"},{"path":"coding-style.html","id":"lists-and-.lists","chapter":"5 Coding style","heading":"5.2.2 Lists and .lists","text":"Now data tidy place live operating system. Nice. data R?Everything R lives Global Environment. can read , free time specific questions.previously touched vectors lists, main difference vectors take one kind element lists can store whatever fancy. ’s want.Imagine need compute following incredibly complicated numbers want store meeting PI later:Omg, see Global Environment top right gets cluttered. PI won’t like . Let’s tidy using list.Click important_numbers top right19 can view content list. equivalent writing View(important_numbers) console R script.Finally, let’s clean mess deleting previously created R objects named , b, c . can rm() function. different ways use .One last trick. notice never saw .c Global Environment. created hidden object . prefix. can find objects(.names = T) remove just .good practice clean environment end analysis chunk end script remove things don’t need anymore. talking gigabytes data instead lousy numbers, try gc() deleting objects.20","code":"\na <- 1 + 1\nb <- 2 - 3\nc <- 2 * Inf\nd <- 1 / 0\ne <- 2^2\nf <- sqrt(2)\ng <- exp(1)\nh <- log10(3)\ni <- log2(42)\nj <- log(pi, base = pi)\nk <- a > b\nl <- a < b\nm <- a == b\nn <- a >= b\no <- a <= b\n# Directly store the first numbers in the list\nimportant_numbers <- list(\n  a = 1 + 1, \n  b = 2 - 3, \n  c = 2 * Inf, \n  # You can also use a string \"d\" to define the name, it's the same\n  \"d\" = 1 / 0)\n\n# Add the remaining numbers\nimportant_numbers[[\"e\"]] <- 2^2\nimportant_numbers[[\"f\"]] <- sqrt(2)\nimportant_numbers[[\"g\"]] <- exp(1)\nimportant_numbers[[\"h\"]] <- log10(3)\nimportant_numbers[[\"i\"]] <- log2(42)\nimportant_numbers[[\"j\"]] <- log(pi, base = pi)\nimportant_numbers[[\"k\"]] <- a > b\nimportant_numbers[[\"l\"]] <- a < b\nimportant_numbers[[\"m\"]] <- a == b\nimportant_numbers[[\"n\"]] <- a >= b\nimportant_numbers[[\"o\"]] <- a <= b\n# Remove one object\nrm(a)\n# Remove multiple object \nrm(b, c)\n# Or \nrm(list = c(\"d\", \"e\"))\n# To remove everything use the object() function\nobjects()\n# and combine the two\nrm(list = objects())\n# Uups, everthing is gone. If you want to keep something add setdiff\na <- 1\nb <- 2\n.c <- 3\n# Remove all but a\nrm(list = setdiff(objects(), \"a\"))"},{"path":"coding-style.html","id":"summary","chapter":"5 Coding style","heading":"5.3 Summary","text":"Thanks making far. intro R Basics ended quite extensive, getting give tools figure problems R . examples useful yet, may come handy later. Basically every piece code used work one point.lot functions get know, especially tidyverse, cover way. Please remember:\n* Ask everything understand seems unclear.\n* always one way get goal, redundancy helps us understand things better.\n* Let us know, different better way something, ’re discuss!","code":""},{"path":"our-project.html","id":"our-project","chapter":"6 Our project","heading":"6 Our project","text":"work mass spectrometry (MS) data obtained new proteomics method called PELSA (peptide-centric local stability assay enables proteome-scale identification protein targets binding regions diverse ligands). PELSA method combines short tryptic digestion proteins interest liquid chromatography-tandem MS (LC-MS/MS) analysis. differential conditions like drug treatment cells specific ligand like metabolites nucleic acids called limited proteolysis identifies sides proteins shielded digestion Trypsin stabilization protein-ligand complex (see Fig.1a).\n, Workflow PELSA. E/S ratio (wt/wt). b, Volcano plot visualization peptides PELSA analysis BT474 lysates exposed 100 nM lapatinib. c, Volcano plot b protein level. d, Local stability profiles reveal ligand-binding regions. upper lower boundaries gray-shaded area represent log2FCs 0.3 −0.3, respectively. x axis represents protein sequence N-terminal C-terminal. e, Local affinity profiles reveal local binding affinity ligand. Heatmap representation log2 peptide fold changes ERBB2 increasing lapatinib concentrations (0, 0.1, 1, 10 100 μM). f, Complex structure mTOR, rapamycin FKBP1A (PDB 1FAP). g, Volcano plot visualizations proteins PELSA analysis published LiP–MS analysis9 HeLa lysates exposed 2 μM rapamycin. h, Local stability profiles mTOR 2 μM rapamycin treatment. b, c g, P values, two-sided empirical Bayes t-test (four lysate replicates), adjustment. local stability plots, peptides |log2FC| > 0.3, passed significance cutoff (−log10P > 2, two-sided empirical Bayes t-test) retained ensure reliable differences peptide abundance. Schematics created using BioRender.com.\nLC-MS/MS measures abundance individual peptides can use quantitatively compare different conditions represented volcano plot Fig. 2a.\n, Volcano plot visualization proteins PELSA analyses K562 (left) HeLa (right) lysates exposed 20 μM staurosporine (four lysate replicates); P values, two-sided empirical Bayes t-test without adjustment. lower boundary red shadow denotes threshold −log10P, 80% stabilized proteins (log2FC < 0) protein kinases; threshold corresponds −log10P > 3.09 PELSA K562 dataset −log10P > 3.77 PELSA HeLa dataset. b, TPR evaluation selected assays staurosporine target identification. labeled points represent numbers identified candidate targets kinase targets assay (TPR 80%). LiP-Quant also labeled kinase target number 20 (TPR = 40%). gray line (slope 1) black dashed line (slope 0.8) represent 100 80% candidate targets kinase targets, respectively. c, Comparison protein sequence coverage LiP-Quant HeLa PELSA HeLa analyses whole quantified proteome (n = 5,601 versus n = 6,840 proteins) identified kinase targets (n = 24 versus n = 108 kinase targets). d, Fold changes kinase targets (n = 17) identified LiP-Quant (TPR cutoff 40%) PELSA (HeLa). c,d, P values, two-sided Wilcoxon rank sum test, adjustment; box plots show median (line, value labeled), upper lower quartiles (box) ±1.5× interquartile range (whiskers); outliers shown. e, Fold changes kinases quantified PELSA (K562), iTSA mTSA datasets. f, Melting temperatures identified kinase targets quantified kinases two PELSA datasets TPP dataset. PELSA kinase targets lack TPP-reported melting temperature values. g, Density plots showing −log10P distributions peptides tryptic cleavage sites located within outside kinase domains (KD) HeLa K562 PELSA analyses. dashed lines indicate −log10P cutoffs defined . doughnut charts show locations kinase peptides passed −log10P cutoffs. P values determined . b–f, Kinase targets refer protein kinases identified staurosporine-binding proteins; quantified kinases refer protein kinases dataset including protein kinases identified staurosporine-binding proteins. LiP-Quant, TPP, iTSA mTSA datasets retrieved literature4,9,17,19; LiP-Quant dataset acquired HeLa cell lysates, TPP, iTSA mTSA datasets obtained K562 cell lysates.Nowadays, proteomics publications accompanied raw MS data. Try find data publication Fig. 2a.\ndata can found following path :Data availabilityPXD034606PRIDE project URIPELSA_staurosporine_K562_peptides.csv\nGreat, data already looks quite clean. ’s work ‘rawer’ data course.","code":""},{"path":"working-with-data.html","id":"working-with-data","chapter":"7 Working with data","heading":"7 Working with data","text":"Finally, ’s happening. beginning work real data can apply new knowledge right away.","code":""},{"path":"working-with-data.html","id":"prepare-your-project","chapter":"7 Working with data","heading":"7.1 Prepare your project","text":"Let’s start opening fresh R project, making nice folder structure opening first script. kind script , R R Markdown work equally well, try find preference .Start project described save first script name like ‘R_group_project’ Scripts folder. Choose name like.\ncan choose kind script want clicking File -> New File -> R Script/R Markdown…/etc.save , press blue button top script says Save current document.\nfirst script ready code, let’s make nicer. suggest briefly describe script contains start loading first packages.Leave empty lines top, look professional. can also use # multiple ##s R scripts comments21 headings R Markdown script.","code":"\n# \n# R Group Project\n# Analysis of LC-MS/MS PELSA data to identify kinases \n# \n\n# Load libraries\nlibrary(tidyverse)"},{"path":"working-with-data.html","id":"import-your-data","chapter":"7 Working with data","heading":"7.2 Import your data","text":"now, link datasets Slack. , please complain. two files called report.tsv report.parquet. output files DIA-NN software, tool analyzes mass spectrometry data outputs table identified ions.22Download files place R project. , try figure functions need read files store objects data_raw.\nGoogle :)\nGoogle ‘import R tsv’, ‘import R parquet’.wasn’t , swear. . seriousness, many ways import data base R solutions, canonical tidyverse functions, cover different data types one, vroom. made life much, much easier automatically understand file format.functions read files begin read. read_. Type press Tab.Another file format like introduce .parquet, Apache Arrow accompanying Arrow R Package.data tenth size therefore reads writes much faster. also convenient .csv files due clear format columns. ’m afraid doesn’t work Excel.\nfunctions also work URLs. Try :23We continue data .parquet file, can delete object.","code":"\n# Simply this\ndata_raw <- vroom::vroom(\"Data/report.tsv\")\ndata_raw <- arrow::read_parquet(\"Data/report.parquet\")\ndata_raw <- vroom::vroom(\"https://www.owncloud.de/bioinfo/R/dataset.tsv\")"},{"path":"working-with-data.html","id":"understand-your-data","chapter":"7 Working with data","heading":"7.3 Understand your data","text":"Okay, got data R. now, already better Excel. Try open .tsv file Excel. need view . ?\nlists, either click object Global Environment top rigth type :\nGreat, first impression data scrolling columns. Since understanding data generate hard, can discuss together. want give try, DIA-NN basics importantly Main output reference. explains column names, look .idea looking , let’s see R provides us summary functions.summary functions use Intro R Monday?\nGoogle gave nice resource https://www.r-bloggers.com/2018/11/explore--dataset--r/.\ncouple examples get overview structure R data object.\nnecessary, simply View() data start look specific questions.","code":"\nView(data_raw, title = \"wow, we can add a title\")\n# Column names\nnames(data_raw)\n# or \ncolnames(data_raw)\n# Print the top of the data\nhead(data_raw)\n# Object structure\nstr(data_raw)\ndim(data_raw)\n# This my take some time with big data but gives you some statistics\nsummary(data_raw)"},{"path":"working-with-data.html","id":"specific-questions","chapter":"7 Working with data","heading":"7.3.1 Specific questions","text":"","code":""},{"path":"working-with-data.html","id":"tidy-up-your-data","chapter":"7 Working with data","heading":"7.4 Tidy up your data","text":"Coming Wednesday","code":""},{"path":"limma-analysis.html","id":"limma-analysis","chapter":"8 Limma analysis","heading":"8 Limma analysis","text":"Coming Wednesday","code":""},{"path":"reporting-results.html","id":"reporting-results","chapter":"9 Reporting results","heading":"9 Reporting results","text":"Coming Thursday.\n","code":""},{"path":"more-data-exploration.html","id":"more-data-exploration","chapter":"10 More data exploration","heading":"10 More data exploration","text":"Coming Thursday.","code":""},{"path":"version-control-with-github.html","id":"version-control-with-github","chapter":"12 Version control with GitHub","heading":"12 Version control with GitHub","text":"Excuse , moment talk version control?24There lot say GitHub one may use . extensive discussion topic basically everything learn chapter can found Happy Git GitHub useR.chapter introduce basics collaborate people using GitHub, probably reason reading first place.","code":""},{"path":"version-control-with-github.html","id":"headstart-into-git-and-github-with-rstudio","chapter":"12 Version control with GitHub","heading":"12.1 Headstart into Git and GitHub with RStudio","text":"following post provides quick introduction set Git GitHub connect GitHub account RStudio: https://www.bioinformatics.babraham.ac.uk/training/RStudio_GitHub/Initial_setup.html.done, able connect download online GitHub repositories able start collaborating projects immediately.","code":""},{"path":"version-control-with-github.html","id":"basic-github-routine","chapter":"12 Version control with GitHub","heading":"12.2 Basic GitHub routine","text":"Open Git terminal R start lines code.Add files:Commit changes:Push commits:…","code":"git add .git commit -m \"Add important changes\"git push"},{"path":"version-control-with-github.html","id":"common-problems","chapter":"12 Version control with GitHub","heading":"12.3 Common problems","text":"following provide summary common problems encountered using Git. also serves reminder .","code":""},{"path":"version-control-with-github.html","id":"too-large-files","chapter":"12 Version control with GitHub","heading":"12.3.1 Too large files","text":"Original post answer: https://stackoverflow.com//17890278.Download BFG Repo-Cleaner jar file “bfg-x.xx.x.jar” (e.g. “bfg-1.14.0.jar”) https://rtyley.github.io/bfg-repo-cleaner/.Download BFG Repo-Cleaner jar file “bfg-x.xx.x.jar” (e.g. “bfg-1.14.0.jar”) https://rtyley.github.io/bfg-repo-cleaner/.Place file directory R project, .git folder.Place file directory R project, .git folder.Open terminal folder (e.g. via RStudio > Git > Shell…)Open terminal folder (e.g. via RStudio > Git > Shell…)Type terminal:Type terminal:file name “bfg.jar” must match name jar file file size limit can changed (e.g. 50M 50 )encouter error, type:clean dead data.encounter following error Warning : large blobs matching criteria found packfiles - repo need packed?, refer post https://stackoverflow.com/q/61769785 type git gc prior step 4.","code":"java -jar bfg.jar --strip-blobs-bigger-than 100Mgit gc --prune=now --aggressive"},{"path":"version-control-with-github.html","id":"gitignore-does-not-instantly-work","chapter":"12 Version control with GitHub","heading":"12.3.2 .gitignore does not instantly work","text":"Just :","code":"git rm -r --cached .\ngit add .\ngit commit -m \"Drop files from .gitignore\""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
